{
  "id": "guide/model-driven",
  "title": "Model Driven (Reactive Forms)",
  "contents": "\n<div class=\"content\">\n<h1 id=\"model-driven-reactive-forms\">Model Driven (Reactive Forms)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"/guide/model-driven#model-driven-reactive-forms\"><i class=\"material-icons\">link</i></a></h1>\n<p>Multiselect can be used with reactive forms as well. Just create a simple <code>FormControl</code> variable and set it on <code>formControl</code> attribute. You can apply all kinds of validation that are applicable for Reactive Forms.</p>\n<code-example language=\"html\">\n&#x3C;ngx-multiselect\n  ngDefaultControl\n  [formControl]=\"selectedOption\"\n  [options]=\"options\">\n&#x3C;/ngx-multiselect>\n</code-example>\n<h2 id=\"demo\">Demo<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"/guide/model-driven#demo\"><i class=\"material-icons\">link</i></a></h2>\n<p><ms-model-driven></ms-model-driven></p>\n<code-tabs>\n  <code-pane title=\"app/model-driven.component.html\" path=\"model-driven/src/app/model-driven.component.html\">\n&#x3C;p>Select your favourite teams from the following:&#x3C;/p>\n&#x3C;ngx-multiselect\n  [formControl]=\"selectedOptions\"\n  ngDefaultControl\n  [options]=\"options\"\n  [multiple]=\"true\">\n&#x3C;/ngx-multiselect>\n\n\n</code-pane>\n  <code-pane title=\"app/model-driven.component.ts\" path=\"model-driven/src/app/model-driven.component.ts\">\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'ms-model-driven',\n  templateUrl: './model-driven.component.html'\n})\nexport class ModelDrivenComponent implements OnInit {\n\n  options;\n  selectedOptions;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.options = [\n      { \"id\": 1, \"name\": \"Manchester United\" },\n      { \"id\": 2, \"name\": \"Liverpool F.C.\" },\n      { \"id\": 3, \"name\": \"Chelsea F.C.\" },\n      { \"id\": 4, \"name\": \"Arsenal F.C.\" }, \n      { \"id\": 5, \"name\": \"FC Barcelona\" }\n    ];\n    this.selectedOptions = new FormControl([\n      { \"id\": 2, \"name\": \"Liverpool F.C.\" },\n      { \"id\": 3, \"name\": \"Chelsea F.C.\" }\n    ]);\n  }\n\n}\n\n\n</code-pane>\n</code-tabs>\n<p>We can also use multiselect <code>formControl</code> inside <code>formGroup</code>/<code>formArray</code>.\nDemonstration of <code>formGroup</code> consists of inputs, button, checkbox, etc.</p>\n<h2 id=\"demo-1\">Demo<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"/guide/model-driven#demo-1\"><i class=\"material-icons\">link</i></a></h2>\n<p><ms-model-driven-form-group></ms-model-driven-form-group></p>\n\n</div>\n<!-- links to this doc:\n-->\n<!-- links from this doc:\n - /guide/model-driven#demo\n - /guide/model-driven#demo-1\n - /guide/model-driven#model-driven-reactive-forms\n-->"
}